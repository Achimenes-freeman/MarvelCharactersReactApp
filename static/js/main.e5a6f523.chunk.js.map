{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","end","style","color","isActive","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","newCharsList","results","map","_transformCharacter","totalChar","total","getCharacter","id","getAllComics","newComicsList","_transformComics","totalComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","pageCount","title","language","textObjects","price","prices","View","classObjecFit","descriptionVisible","length","slice","href","RandomChar","setChar","onCharLoaded","updateChar","Math","floor","random","then","useEffect","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","arr","i","imgStyle","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","AppBanner","avengers","avengersLogo","ComicsPage","Page404","comic","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e5a6f523.chunk.js","sourcesContent":["import { Link, NavLink } from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <NavLink \n                            end \n                            style={({isActive}) => ({color: isActive ? '#9f0013' : null})} \n                            to=\"/\">Characters</NavLink>\n                    </li>\n                    /\n                    <li>\n                        <NavLink \n                            style={({isActive}) => ({color: isActive ? '#9f0013' : null})}\n                            to=\"/comics\">Comics</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt='Error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=44338feddb6196554b6dc439e066b3ff';\r\n    const _baseOffset = 0;\r\n\r\n    \r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=3&offset=${offset}&${_apiKey}`);\r\n        return {\r\n            newCharsList: res.data.results.map(_transformCharacter),\r\n            totalChar: res.data.total\r\n        };\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return {\r\n            newComicsList: res.data.results.map(_transformComics),\r\n            totalComics: res.data.total\r\n        };\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Описание отсутствует...',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items \r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\r\n        return {\r\n            id: comics.id,\r\n            pageCount: comics.pageCount ? `${comics.pageCount} р.` : 'No information the number of page',\r\n            description: comics.description ? comics.description : 'Описание отсутствует...',\r\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n            title: comics.title ? comics.title : null,\r\n            language: comics.textObjects.language || 'en-us',\r\n            price: comics.prices[0].price > 0 ? comics.prices[0].price + '$' : 'Not available' \r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, [])\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [char, setChar] = useState({});\n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n            getCharacter(id)\n                .then(onCharLoaded);\n    }\n\n    useEffect(() => {\n        updateChar();\n        // const timerId = setInterval(updateChar, 10000);\n\n        // return () => {\n        //     clearInterval(timerId)\n        // }\n    },[])\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? <View char={char}/> : null; \n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\">\n                    <div className=\"inner\" onClick={updateChar}>try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let classObjecFit = 'randomchar__img';\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){\n        classObjecFit += ' obj-fit-contain';\n    }\n\n    const descriptionVisible = (description && description.length > 200) ? `${description.slice(0, 200)}...` : description;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={classObjecFit}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {descriptionVisible}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {useState, useEffect, useRef} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nconst CharList = (props) => {\n\n    const [charList, setCharList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [charEnded, setCharEnded] = useState(false);\n    \n    const {loading, error, getAllCharacters} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    },[])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n    }\n\n    const onCharListLoaded = ({newCharsList, totalChar}) => {\n        let ended = false;\n        if ((newCharsList.length < 3) || (offset === totalChar)) {\n            ended = true;\n        }\n\n        setCharList(charList => [...charList, ...newCharsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 3);\n        setCharEnded(charEnded => ended);\n\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[i] = el}\n                    key={item.id}\n                    onClick={() => {\n                                props.onCharSelected(item.id);\n                                focusOnItem(i);\n                            }}\n                    onKeyPress={(e) => {\n                                    if (e.key === ' ' || e.key === 'Enter') {\n                                        props.onCharSelected(item.id);\n                                        focusOnItem(i);\n                                    }\n                                }}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': charEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {useState, useEffect} from 'react';\nimport useMarvelService from '../../services/MarvelService';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getCharacter, clearError}= useMarvelService();\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        const {charId} = props;\n        if(!charId) {\n            return;\n        }\n\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n    }\n\n    useEffect(() => {\n            updateChar();\n    }, [props.charId]);\n\n        const skeleton = char || loading || error ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null; \n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n}\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n\n    let classObjecFit = (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? 'obj-fit-char-list-item' : null;\n    \n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} className={classObjecFit}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.length > 0 ? null : 'Комиксы отсутствуют'\n                }\n                {\n                    comics.map((item, i) => {\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\n\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","import { useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './comicsList.scss';\n\nconst ComicsList = (props) => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    },[])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n        getAllComics(offset, 'comics')\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = ({newComicsList, totalComics}) => {\n        let ended = false;\n        if ((newComicsList.length < 8) || (offset === totalComics)) {\n            ended = true;\n        }\n\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n\n    }\n\n\n\n    // const itemRefs = useRef([]);\n\n    // const focusOnItem = (id) => {\n    //     itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    //     itemRefs.current[id].classList.add('char__item_selected');\n    //     itemRefs.current[id].focus();\n    // }\n\n    function renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            return (   \n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button \n                className=\"button button__main button__long\"\n                disabled={newItemLoading}\n                style={{'display': comicsEnded ? 'none' : 'block'}}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return(\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Page404 = () => {\r\n    return(\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p style={{'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px'}}>Page dosen't exist</p>\r\n            <Link style={{'display': 'block', 'textAlign': 'center', 'fontWeight': 'bold', 'fontSize': '24px', 'marginTop': '30px'}} to=\"/\">Back to main page</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport Page404 from './404';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n            updateComic();\r\n    }, [comicId]);\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n    const errorMessage = error ? <Page404/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null; \r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n            \r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n\r\n    const {pageCount, description, thumbnail, title, language, price} = comic;\r\n    \r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport { MainPage, ComicsPage, SingleComicPage } from \"../pages\";\nimport  Page404  from \"../pages/404\";\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>\n                        <Route path=\"/comics\" element={<ComicsPage/>}/>\n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\n                        <Route path=\"*\" element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.createRoot(document.getElementById('root'))\n  .render(\n      <App />\n  );\n\n"],"sourceRoot":""}